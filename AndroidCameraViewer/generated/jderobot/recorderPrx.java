// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `recorder.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package jderobot;

public interface recorderPrx extends Ice.ObjectPrx
{
    public boolean saveLog(String name, int seconds);

    public boolean saveLog(String name, int seconds, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_saveLog(String name, int seconds);

    public Ice.AsyncResult begin_saveLog(String name, int seconds, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_saveLog(String name, int seconds, Ice.Callback __cb);

    public Ice.AsyncResult begin_saveLog(String name, int seconds, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_saveLog(String name, int seconds, Callback_recorder_saveLog __cb);

    public Ice.AsyncResult begin_saveLog(String name, int seconds, java.util.Map<String, String> __ctx, Callback_recorder_saveLog __cb);

    public boolean end_saveLog(Ice.AsyncResult __result);

    public boolean saveVideo(String path, String name, int seconds);

    public boolean saveVideo(String path, String name, int seconds, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_saveVideo(String path, String name, int seconds);

    public Ice.AsyncResult begin_saveVideo(String path, String name, int seconds, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_saveVideo(String path, String name, int seconds, Ice.Callback __cb);

    public Ice.AsyncResult begin_saveVideo(String path, String name, int seconds, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_saveVideo(String path, String name, int seconds, Callback_recorder_saveVideo __cb);

    public Ice.AsyncResult begin_saveVideo(String path, String name, int seconds, java.util.Map<String, String> __ctx, Callback_recorder_saveVideo __cb);

    public boolean end_saveVideo(Ice.AsyncResult __result);
}
