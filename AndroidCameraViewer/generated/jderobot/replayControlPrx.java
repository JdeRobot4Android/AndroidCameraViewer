// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `replayControl.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package jderobot;

public interface replayControlPrx extends Ice.ObjectPrx
{
    public boolean pause();

    public boolean pause(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pause();

    public Ice.AsyncResult begin_pause(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_pause(Ice.Callback __cb);

    public Ice.AsyncResult begin_pause(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_pause(Callback_replayControl_pause __cb);

    public Ice.AsyncResult begin_pause(java.util.Map<String, String> __ctx, Callback_replayControl_pause __cb);

    public boolean end_pause(Ice.AsyncResult __result);

    public boolean resume();

    public boolean resume(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_resume();

    public Ice.AsyncResult begin_resume(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_resume(Ice.Callback __cb);

    public Ice.AsyncResult begin_resume(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_resume(Callback_replayControl_resume __cb);

    public Ice.AsyncResult begin_resume(java.util.Map<String, String> __ctx, Callback_replayControl_resume __cb);

    public boolean end_resume(Ice.AsyncResult __result);

    public void setReplay(boolean replay);

    public void setReplay(boolean replay, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setReplay(boolean replay);

    public Ice.AsyncResult begin_setReplay(boolean replay, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setReplay(boolean replay, Ice.Callback __cb);

    public Ice.AsyncResult begin_setReplay(boolean replay, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setReplay(boolean replay, Callback_replayControl_setReplay __cb);

    public Ice.AsyncResult begin_setReplay(boolean replay, java.util.Map<String, String> __ctx, Callback_replayControl_setReplay __cb);

    public void end_setReplay(Ice.AsyncResult __result);

    public boolean setStep(int step);

    public boolean setStep(int step, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setStep(int step);

    public Ice.AsyncResult begin_setStep(int step, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setStep(int step, Ice.Callback __cb);

    public Ice.AsyncResult begin_setStep(int step, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setStep(int step, Callback_replayControl_setStep __cb);

    public Ice.AsyncResult begin_setStep(int step, java.util.Map<String, String> __ctx, Callback_replayControl_setStep __cb);

    public boolean end_setStep(Ice.AsyncResult __result);

    public long getTime();

    public long getTime(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTime();

    public Ice.AsyncResult begin_getTime(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTime(Ice.Callback __cb);

    public Ice.AsyncResult begin_getTime(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTime(Callback_replayControl_getTime __cb);

    public Ice.AsyncResult begin_getTime(java.util.Map<String, String> __ctx, Callback_replayControl_getTime __cb);

    public long end_getTime(Ice.AsyncResult __result);

    public boolean goTo(long seek);

    public boolean goTo(long seek, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_goTo(long seek);

    public Ice.AsyncResult begin_goTo(long seek, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_goTo(long seek, Ice.Callback __cb);

    public Ice.AsyncResult begin_goTo(long seek, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_goTo(long seek, Callback_replayControl_goTo __cb);

    public Ice.AsyncResult begin_goTo(long seek, java.util.Map<String, String> __ctx, Callback_replayControl_goTo __cb);

    public boolean end_goTo(Ice.AsyncResult __result);
}
