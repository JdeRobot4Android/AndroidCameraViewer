// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `bodyencoders.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package jderobot;

/**
 * Interface to the Humanoid Body Encoders.
 **/
public interface BodyEncodersPrx extends Ice.ObjectPrx
{
    public ArmEncodersData getArmEncodersData(BodySide side);

    public ArmEncodersData getArmEncodersData(BodySide side, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getArmEncodersData(BodySide side);

    public Ice.AsyncResult begin_getArmEncodersData(BodySide side, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getArmEncodersData(BodySide side, Ice.Callback __cb);

    public Ice.AsyncResult begin_getArmEncodersData(BodySide side, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getArmEncodersData(BodySide side, Callback_BodyEncoders_getArmEncodersData __cb);

    public Ice.AsyncResult begin_getArmEncodersData(BodySide side, java.util.Map<String, String> __ctx, Callback_BodyEncoders_getArmEncodersData __cb);

    public ArmEncodersData end_getArmEncodersData(Ice.AsyncResult __result);

    public LegEncodersData getLegEncodersData(BodySide side);

    public LegEncodersData getLegEncodersData(BodySide side, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getLegEncodersData(BodySide side);

    public Ice.AsyncResult begin_getLegEncodersData(BodySide side, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getLegEncodersData(BodySide side, Ice.Callback __cb);

    public Ice.AsyncResult begin_getLegEncodersData(BodySide side, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getLegEncodersData(BodySide side, Callback_BodyEncoders_getLegEncodersData __cb);

    public Ice.AsyncResult begin_getLegEncodersData(BodySide side, java.util.Map<String, String> __ctx, Callback_BodyEncoders_getLegEncodersData __cb);

    public LegEncodersData end_getLegEncodersData(Ice.AsyncResult __result);

    public OdometryData getOdometryData(CameraBody camera);

    public OdometryData getOdometryData(CameraBody camera, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getOdometryData(CameraBody camera);

    public Ice.AsyncResult begin_getOdometryData(CameraBody camera, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getOdometryData(CameraBody camera, Ice.Callback __cb);

    public Ice.AsyncResult begin_getOdometryData(CameraBody camera, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getOdometryData(CameraBody camera, Callback_BodyEncoders_getOdometryData __cb);

    public Ice.AsyncResult begin_getOdometryData(CameraBody camera, java.util.Map<String, String> __ctx, Callback_BodyEncoders_getOdometryData __cb);

    public OdometryData end_getOdometryData(Ice.AsyncResult __result);
}
