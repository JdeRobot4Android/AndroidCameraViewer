// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `pose3d.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package jderobot;

/**
 * Pose3D data information 
 **/
public class Pose3DData extends Ice.ObjectImpl
{
    public Pose3DData()
    {
    }

    public Pose3DData(float x, float y, float z, float h, float q0, float q1, float q2, float q3)
    {
        this.x = x;
        this.y = y;
        this.z = z;
        this.h = h;
        this.q0 = q0;
        this.q1 = q1;
        this.q2 = q2;
        this.q3 = q3;
    }

    private static class __F implements Ice.ObjectFactory
    {
        public Ice.Object create(String type)
        {
            assert(type.equals(ice_staticId()));
            return new Pose3DData();
        }

        public void destroy()
        {
        }
    }
    private static Ice.ObjectFactory _factory = new __F();

    public static Ice.ObjectFactory
    ice_factory()
    {
        return _factory;
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::jderobot::Pose3DData"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.writeFloat(x);
        __os.writeFloat(y);
        __os.writeFloat(z);
        __os.writeFloat(h);
        __os.writeFloat(q0);
        __os.writeFloat(q1);
        __os.writeFloat(q2);
        __os.writeFloat(q3);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        x = __is.readFloat();
        y = __is.readFloat();
        z = __is.readFloat();
        h = __is.readFloat();
        q0 = __is.readFloat();
        q1 = __is.readFloat();
        q2 = __is.readFloat();
        q3 = __is.readFloat();
        __is.endReadSlice();
    }

    public float x;

    public float y;

    public float z;

    public float h;

    public float q0;

    public float q1;

    public float q2;

    public float q3;

    public static final long serialVersionUID = -3672917100955277245L;
}
