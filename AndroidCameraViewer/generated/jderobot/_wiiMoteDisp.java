// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `wiimote.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package jderobot;

public abstract class _wiiMoteDisp extends Ice.ObjectImpl implements wiiMote
{
    protected void
    ice_copyStateFrom(Ice.Object __obj)
        throws java.lang.CloneNotSupportedException
    {
        throw new java.lang.CloneNotSupportedException();
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::jderobot::wiiMote"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    public final int activateLed(int led)
    {
        return activateLed(led, null);
    }

    public final int changeAccMode()
    {
        return changeAccMode(null);
    }

    public final int changeButtonMode()
    {
        return changeButtonMode(null);
    }

    public final int changeIrMode()
    {
        return changeIrMode(null);
    }

    public final int changeNunchukMode()
    {
        return changeNunchukMode(null);
    }

    public final int changeRumbleMode()
    {
        return changeRumbleMode(null);
    }

    public final AccelerometerData getAccData()
    {
        return getAccData(null);
    }

    public final int getBatteryStatus()
    {
        return getBatteryStatus(null);
    }

    public final int getButtonData()
    {
        return getButtonData(null);
    }

    public final InfraredData getIrData()
    {
        return getIrData(null);
    }

    public final NunchukData getNunchukData()
    {
        return getNunchukData(null);
    }

    public final int setValue(int Value)
    {
        return setValue(Value, null);
    }

    public static Ice.DispatchStatus ___setValue(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int Value;
        Value = __is.readInt();
        __inS.endReadParams();
        int __ret = __obj.setValue(Value, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___changeRumbleMode(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.changeRumbleMode(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___changeIrMode(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.changeIrMode(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___changeAccMode(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.changeAccMode(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___changeButtonMode(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.changeButtonMode(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___changeNunchukMode(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.changeNunchukMode(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___activateLed(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int led;
        led = __is.readInt();
        __inS.endReadParams();
        int __ret = __obj.activateLed(led, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getButtonData(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.getButtonData(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getNunchukData(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        NunchukData __ret = __obj.getNunchukData(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeObject(__ret);
        __os.writePendingObjects();
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getAccData(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        AccelerometerData __ret = __obj.getAccData(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeObject(__ret);
        __os.writePendingObjects();
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getIrData(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        InfraredData __ret = __obj.getIrData(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeObject(__ret);
        __os.writePendingObjects();
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getBatteryStatus(wiiMote __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.getBatteryStatus(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    private final static String[] __all =
    {
        "activateLed",
        "changeAccMode",
        "changeButtonMode",
        "changeIrMode",
        "changeNunchukMode",
        "changeRumbleMode",
        "getAccData",
        "getBatteryStatus",
        "getButtonData",
        "getIrData",
        "getNunchukData",
        "ice_id",
        "ice_ids",
        "ice_isA",
        "ice_ping",
        "setValue"
    };

    public Ice.DispatchStatus __dispatch(IceInternal.Incoming in, Ice.Current __current)
    {
        int pos = java.util.Arrays.binarySearch(__all, __current.operation);
        if(pos < 0)
        {
            throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
        }

        switch(pos)
        {
            case 0:
            {
                return ___activateLed(this, in, __current);
            }
            case 1:
            {
                return ___changeAccMode(this, in, __current);
            }
            case 2:
            {
                return ___changeButtonMode(this, in, __current);
            }
            case 3:
            {
                return ___changeIrMode(this, in, __current);
            }
            case 4:
            {
                return ___changeNunchukMode(this, in, __current);
            }
            case 5:
            {
                return ___changeRumbleMode(this, in, __current);
            }
            case 6:
            {
                return ___getAccData(this, in, __current);
            }
            case 7:
            {
                return ___getBatteryStatus(this, in, __current);
            }
            case 8:
            {
                return ___getButtonData(this, in, __current);
            }
            case 9:
            {
                return ___getIrData(this, in, __current);
            }
            case 10:
            {
                return ___getNunchukData(this, in, __current);
            }
            case 11:
            {
                return ___ice_id(this, in, __current);
            }
            case 12:
            {
                return ___ice_ids(this, in, __current);
            }
            case 13:
            {
                return ___ice_isA(this, in, __current);
            }
            case 14:
            {
                return ___ice_ping(this, in, __current);
            }
            case 15:
            {
                return ___setValue(this, in, __current);
            }
        }

        assert(false);
        throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        __is.endReadSlice();
    }

    public static final long serialVersionUID = 0L;
}
