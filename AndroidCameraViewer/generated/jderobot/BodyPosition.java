// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `bodymovements.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package jderobot;

/**
 * BodyPosition
 **/
public class BodyPosition implements java.lang.Cloneable, java.io.Serializable
{
    public ArmPosition lArm;

    public ArmPosition rArm;

    public LegPosition rLeg;

    public LegPosition lLeg;

    public BodyMotor head;

    public float time;

    public BodyPosition()
    {
    }

    public BodyPosition(ArmPosition lArm, ArmPosition rArm, LegPosition rLeg, LegPosition lLeg, BodyMotor head, float time)
    {
        this.lArm = lArm;
        this.rArm = rArm;
        this.rLeg = rLeg;
        this.lLeg = lLeg;
        this.head = head;
        this.time = time;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        BodyPosition _r = null;
        if(rhs instanceof BodyPosition)
        {
            _r = (BodyPosition)rhs;
        }

        if(_r != null)
        {
            if(lArm != _r.lArm)
            {
                if(lArm == null || _r.lArm == null || !lArm.equals(_r.lArm))
                {
                    return false;
                }
            }
            if(rArm != _r.rArm)
            {
                if(rArm == null || _r.rArm == null || !rArm.equals(_r.rArm))
                {
                    return false;
                }
            }
            if(rLeg != _r.rLeg)
            {
                if(rLeg == null || _r.rLeg == null || !rLeg.equals(_r.rLeg))
                {
                    return false;
                }
            }
            if(lLeg != _r.lLeg)
            {
                if(lLeg == null || _r.lLeg == null || !lLeg.equals(_r.lLeg))
                {
                    return false;
                }
            }
            if(head != _r.head)
            {
                if(head == null || _r.head == null || !head.equals(_r.head))
                {
                    return false;
                }
            }
            if(time != _r.time)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::jderobot::BodyPosition");
        __h = IceInternal.HashUtil.hashAdd(__h, lArm);
        __h = IceInternal.HashUtil.hashAdd(__h, rArm);
        __h = IceInternal.HashUtil.hashAdd(__h, rLeg);
        __h = IceInternal.HashUtil.hashAdd(__h, lLeg);
        __h = IceInternal.HashUtil.hashAdd(__h, head);
        __h = IceInternal.HashUtil.hashAdd(__h, time);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        lArm.__write(__os);
        rArm.__write(__os);
        rLeg.__write(__os);
        lLeg.__write(__os);
        head.__write(__os);
        __os.writeFloat(time);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        lArm = new ArmPosition();
        lArm.__read(__is);
        rArm = new ArmPosition();
        rArm.__read(__is);
        rLeg = new LegPosition();
        rLeg.__read(__is);
        lLeg = new LegPosition();
        lLeg.__read(__is);
        head = new BodyMotor();
        head.__read(__is);
        time = __is.readFloat();
    }

    public static final long serialVersionUID = -4843440002238107024L;
}
